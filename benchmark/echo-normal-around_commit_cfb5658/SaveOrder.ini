SaveOrder

BeliMangTestCasesPB2W4 on  main [!] is 📦 v1.0.0 via 🐹 v1.22.3 via  on ☁️  (ap-southeast-1) took 1m3s
❯ make load-test
git pull origin main;
From https://github.com/nandanugg/BeliMangTestCasesPB2W4
 * branch            main       -> FETCH_HEAD
Already up to date.
LOAD_TEST=true k6 run index.js;

          /\      |‾‾| /‾‾/   /‾‾/
     /\  /  \     |  |/  /   /  /
    /  \/    \    |     (   /   ‾‾\
   /          \   |  |\  \ |  (‾)  |
  / __________ \  |__| \__\ \_____/ .io

     execution: local
        script: index.js
        output: -

     scenarios: (100.00%) 1 scenario, 300 max VUs, 1m18s max duration (incl. graceful stop):
              * default: Up to 300 looping VUs for 48s over 8 stages (gracefulRampDown: 30s, gracefulStop: 30s)

INFO[0003] ⛑️ ARMING... ⛑️                               source=console
INFO[0003] 🚀 NUKE READY!                                 source=console
INFO[0003] 💥 FAYYYAAAAH! 🇯🇵                              source=console
INFO[0003] Adding all pregenerated merchants... 😰        source=console
INFO[0011] All pregenerated merchants added! 🥳           source=console
INFO[0061] Test ended, I recomend to remove all of your merchants before re-run the test to avoid miss estimation on nearest merchant location.  source=console

     ✓ Admin Register | valid payload | should return 201
     ✓ Admin Register | register twice | should return 409
     ✓ Admin Login | valid payload | should return 200
     ✓ Merchant Get | no param | should return 200
     ✓ Merchant Get | no param | should have the correct total data based on pagination
     ✓ Merchant Get | no param | should have merchantId
     ✓ Merchant Get | no param | should have name
     ✓ Merchant Get | no param | should have imageUrl
     ✓ Merchant Get | no param | should have merchantCategory
     ✓ Merchant Get | no param | should have createdAt with correct format
     ✓ Merchant Get | no param | should have return ordered correctly
     ✓ Merchant Get | no param | should have location.lat
     ✓ Merchant Get | no param | should have location.long
     ✓ Merchant Get | no param | should have meta.limit
     ✓ Merchant Get | no param | should have meta.offset
     ✓ Merchant Get | no param | should have meta.total
     ✓ Merchant Get | with name=a param | should have name with "a" in it
     ✓ Merchant Get | with merchantCategory=BoothKiosk param | should have "BoothKiosk" category in it
     ✓ Merchant Get | with createdAt=asc param | should have return ordered correctly
     ✓ Merchant Get | pagination | should have the correct total data based on pagination
     ✓ User Register | valid payload | should return 201
     ✓ User Register | register twice | should return 409
     ✓ User Login | valid payload | should return 200
     ✓ User Get Nearby Merchant | no param | should have the correct nearest merchant
     ✓ User Get Nearby Merchant | with name=a param | should have name with "a" in it
     ✓ User Get Nearby Merchant | with merchantCategory=BoothKiosk param | should have "BoothKiosk" category in it
     ✓ User Estimate Order Test | get merchant items | should return 200
     ✓ User Estimate Order Test | get merchant items | should have itemId
     ✓ User Estimate Order Test | add merchant items if not exists | should return 201
     ✓ User Estimate Order Test | add merchant items if not exists | should have itemId
     ✓ User Estimate Order Test | valid payload | should return 200
     ✓ User Estimate Order Test | valid payload | should have totalPrice and equal to calculated total
     ✓ User Estimate Order Test | valid payload | should have calculatedEstimateId
     ✓ User Estimate Order Test | valid payload | should have estimatedDeliveryTimeInMinutes and not far from precalculated resul
     ✓ User Order Test | valid payload | should return 201
     ✓ User Order Test | valid payload | should have orderId
     ✓ User Get Order Test | no param | should return 200
     ✓ User Get Order Test | no param | should have the correct total data based on pagination
     ✓ User Get Order Test | no param | should have merchant.merchantId
     ✓ User Get Order Test | no param | should have merchant.name
     ✓ User Get Order Test | no param | should have merchant.imageUrl
     ✓ User Get Order Test | no param | should have merchant.merchantCategory
     ✓ User Get Order Test | no param | should have merchant.createdAt
     ✓ User Get Order Test | no param | should have merchant.location.lat
     ✓ User Get Order Test | no param | should have merchant.location.long
     ✓ User Get Order Test | no param | should have items.itemId
     ✓ User Get Order Test | no param | should have items.name
     ✓ User Get Order Test | no param | should have items.imageUrl
     ✓ User Get Order Test | no param | should have items.productCategory
     ✓ User Get Order Test | no param | should have items.createdAt
     ✓ User Get Order Test | with name=a param | should have name with "a" in it
     ✗ User Get Order Test | with merchantCategory=BoothKiosk param | should have "BoothKiosk" category in it
      ↳  93% — ✓ 1551 / ✗ 113
     ✓ User Get Order Test | pagination | should have the correct total data based on pagination

     █ setup

       ✓ Admin Register | valid payload | should return 201
       ✓ Admin Register | register twice | should return 409
       ✓ Admin Login | valid payload | should return 200
       ✓ Merchant Post | valid payload | should return 201
       ✓ Merchant Post | valid payload | should have merchantId

     █ teardown

     checks.........................: 99.92% ✓ 151580      ✗ 113
     data_received..................: 898 MB 16 MB/s
     data_sent......................: 29 MB  493 kB/s
     grpc_req_duration..............: avg=77.66ms  min=89.67µs  med=2.12ms  max=2.96s    p(90)=129.51ms p(95)=613.05ms
     http_req_blocked...............: avg=87.77µs  min=635ns    med=2.67µs  max=417.7ms  p(90)=6.18µs   p(95)=8.41µs
     http_req_connecting............: avg=65.54µs  min=0s       med=0s      max=270.9ms  p(90)=0s       p(95)=0s
     http_req_duration..............: avg=36.48ms  min=282.6µs  med=10.75ms max=1.66s    p(90)=99.64ms  p(95)=144.65ms
       { expected_response:true }...: avg=37.18ms  min=311.46µs med=11.12ms max=1.66s    p(90)=101.36ms p(95)=147.49ms
     http_req_failed................: 4.86%  ✓ 3329        ✗ 65031
     http_req_receiving.............: avg=554.63µs min=10.12µs  med=45.51µs max=1.5s     p(90)=103.39µs p(95)=153.87µs
     http_req_sending...............: avg=115.96µs min=3.42µs   med=15.57µs max=929.22ms p(90)=40.84µs  p(95)=53.44µs
     http_req_tls_handshaking.......: avg=0s       min=0s       med=0s      max=0s       p(90)=0s       p(95)=0s
     http_req_waiting...............: avg=35.81ms  min=252.59µs med=10.59ms max=1.46s    p(90)=98.37ms  p(95)=142.07ms
     http_reqs......................: 68360  1184.899527/s
     iteration_duration.............: avg=3.2s     min=5.41ms   med=2.31s   max=10.33s   p(90)=7.3s     p(95)=7.94s
     iterations.....................: 1664   28.842493/s
     vus............................: 49     min=0         max=300
     vus_max........................: 300    min=300       max=300


running (0m57.7s), 000/300 VUs, 1664 complete and 0 interrupted iterations
default ✓ [======================================] 000/300 VUs  48s


BeliMangTestCasesPB2W4 on  main [!] is 📦 v1.0.0 via 🐹 v1.22.3 via  on ☁️  (ap-southeast-1) took 1m13s
❯ make load-test
git pull origin main;
From https://github.com/nandanugg/BeliMangTestCasesPB2W4
 * branch            main       -> FETCH_HEAD
Already up to date.
LOAD_TEST=true k6 run index.js;

          /\      |‾‾| /‾‾/   /‾‾/
     /\  /  \     |  |/  /   /  /
    /  \/    \    |     (   /   ‾‾\
   /          \   |  |\  \ |  (‾)  |
  / __________ \  |__| \__\ \_____/ .io

     execution: local
        script: index.js
        output: -

     scenarios: (100.00%) 1 scenario, 300 max VUs, 1m18s max duration (incl. graceful stop):
              * default: Up to 300 looping VUs for 48s over 8 stages (gracefulRampDown: 30s, gracefulStop: 30s)

INFO[0003] ⛑️ ARMING... ⛑️                               source=console
INFO[0003] 🚀 NUKE READY!                                 source=console
INFO[0003] 💥 FAYYYAAAAH! 🇯🇵                              source=console
INFO[0003] Adding all pregenerated merchants... 😰        source=console
INFO[0010] All pregenerated merchants added! 🥳           source=console
INFO[0060] Test ended, I recomend to remove all of your merchants before re-run the test to avoid miss estimation on nearest merchant location.  source=console

     ✓ Admin Register | valid payload | should return 201
     ✓ Admin Register | register twice | should return 409
     ✓ Admin Login | valid payload | should return 200
     ✓ Merchant Get | no param | should return 200
     ✓ Merchant Get | no param | should have the correct total data based on pagination
     ✓ Merchant Get | no param | should have merchantId
     ✓ Merchant Get | no param | should have name
     ✓ Merchant Get | no param | should have imageUrl
     ✓ Merchant Get | no param | should have merchantCategory
     ✓ Merchant Get | no param | should have createdAt with correct format
     ✓ Merchant Get | no param | should have return ordered correctly
     ✓ Merchant Get | no param | should have location.lat
     ✓ Merchant Get | no param | should have location.long
     ✓ Merchant Get | no param | should have meta.limit
     ✓ Merchant Get | no param | should have meta.offset
     ✓ Merchant Get | no param | should have meta.total
     ✓ Merchant Get | with name=a param | should have name with "a" in it
     ✓ Merchant Get | with merchantCategory=BoothKiosk param | should have "BoothKiosk" category in it
     ✓ Merchant Get | with createdAt=asc param | should have return ordered correctly
     ✓ Merchant Get | pagination | should have the correct total data based on pagination
     ✓ User Register | valid payload | should return 201
     ✓ User Register | register twice | should return 409
     ✓ User Login | valid payload | should return 200
     ✓ User Get Nearby Merchant | no param | should have the correct nearest merchant
     ✓ User Get Nearby Merchant | with name=a param | should have name with "a" in it
     ✓ User Get Nearby Merchant | with merchantCategory=BoothKiosk param | should have "BoothKiosk" category in it
     ✓ User Estimate Order Test | get merchant items | should return 200
     ✓ User Estimate Order Test | get merchant items | should have itemId
     ✓ User Estimate Order Test | add merchant items if not exists | should return 201
     ✓ User Estimate Order Test | add merchant items if not exists | should have itemId
     ✓ User Estimate Order Test | valid payload | should return 200
     ✓ User Estimate Order Test | valid payload | should have totalPrice and equal to calculated total
     ✓ User Estimate Order Test | valid payload | should have calculatedEstimateId
     ✓ User Estimate Order Test | valid payload | should have estimatedDeliveryTimeInMinutes and not far from precalculated resul
     ✓ User Order Test | valid payload | should return 201
     ✓ User Order Test | valid payload | should have orderId
     ✓ User Get Order Test | no param | should return 200
     ✓ User Get Order Test | no param | should have the correct total data based on pagination
     ✓ User Get Order Test | no param | should have merchant.merchantId
     ✓ User Get Order Test | no param | should have merchant.name
     ✓ User Get Order Test | no param | should have merchant.imageUrl
     ✓ User Get Order Test | no param | should have merchant.merchantCategory
     ✓ User Get Order Test | no param | should have merchant.createdAt
     ✓ User Get Order Test | no param | should have merchant.location.lat
     ✓ User Get Order Test | no param | should have merchant.location.long
     ✓ User Get Order Test | no param | should have items.itemId
     ✓ User Get Order Test | no param | should have items.name
     ✓ User Get Order Test | no param | should have items.imageUrl
     ✓ User Get Order Test | no param | should have items.productCategory
     ✓ User Get Order Test | no param | should have items.createdAt
     ✓ User Get Order Test | with name=a param | should have name with "a" in it
     ✗ User Get Order Test | with merchantCategory=BoothKiosk param | should have "BoothKiosk" category in it
      ↳  88% — ✓ 1521 / ✗ 200
     ✓ User Get Order Test | pagination | should have the correct total data based on pagination

     █ setup

       ✓ Admin Register | valid payload | should return 201
       ✓ Admin Register | register twice | should return 409
       ✓ Admin Login | valid payload | should return 200
       ✓ Merchant Post | valid payload | should return 201
       ✓ Merchant Post | valid payload | should have merchantId

     █ teardown

     checks.........................: 99.87% ✓ 156548      ✗ 200
     data_received..................: 929 MB 16 MB/s
     data_sent......................: 29 MB  511 kB/s
     grpc_req_duration..............: avg=63.19ms  min=103.83µs med=2.55ms  max=1.82s    p(90)=133.08ms p(95)=393.25ms
     http_req_blocked...............: avg=78.09µs  min=614ns    med=2.86µs  max=845.62ms p(90)=6.53µs   p(95)=8.93µs
     http_req_connecting............: avg=39.44µs  min=0s       med=0s      max=78.55ms  p(90)=0s       p(95)=0s
     http_req_duration..............: avg=36.28ms  min=269.28µs med=7.96ms  max=1.47s    p(90)=101.58ms p(95)=154.35ms
       { expected_response:true }...: avg=37.09ms  min=346.45µs med=8.35ms  max=1.47s    p(90)=103.98ms p(95)=157.11ms
     http_req_failed................: 4.87%  ✓ 3443        ✗ 67188
     http_req_receiving.............: avg=567.99µs min=8.27µs   med=47.71µs max=1.02s    p(90)=108.65µs p(95)=159.32µs
     http_req_sending...............: avg=109.94µs min=3.25µs   med=16.3µs  max=755.94ms p(90)=43.08µs  p(95)=57.55µs
     http_req_tls_handshaking.......: avg=0s       min=0s       med=0s      max=0s       p(90)=0s       p(95)=0s
     http_req_waiting...............: avg=35.6ms   min=246.07µs med=7.82ms  max=1.47s    p(90)=100.14ms p(95)=151.4ms
     http_reqs......................: 70631  1229.806127/s
     iteration_duration.............: avg=3.14s    min=2.88ms   med=1.93s   max=10.18s   p(90)=7.09s    p(95)=7.94s
     iterations.....................: 1721   29.965544/s
     vus............................: 29     min=0         max=300
     vus_max........................: 300    min=300       max=300


running (0m57.4s), 000/300 VUs, 1721 complete and 0 interrupted iterations
default ✓ [======================================] 000/300 VUs  48s
