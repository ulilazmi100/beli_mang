Benchmark

BeliMangTestCasesPB2W4 on  main is 📦 v1.0.0 via 🐹 via  on ☁️  (ap-southeast-1) took 1m9s
❯ make load-test
git pull origin main;
From https://github.com/nandanugg/BeliMangTestCasesPB2W4
 * branch            main       -> FETCH_HEAD
Already up to date.
LOAD_TEST=true k6 run index.js;

          /\      |‾‾| /‾‾/   /‾‾/
     /\  /  \     |  |/  /   /  /
    /  \/    \    |     (   /   ‾‾\
   /          \   |  |\  \ |  (‾)  |
  / __________ \  |__| \__\ \_____/ .io

     execution: local
        script: index.js
        output: -

     scenarios: (100.00%) 1 scenario, 300 max VUs, 1m18s max duration (incl. graceful stop):
              * default: Up to 300 looping VUs for 48s over 8 stages (gracefulRampDown: 30s, gracefulStop: 30s)

INFO[0003] ⛑️ ARMING... ⛑️                               source=console
INFO[0003] 🚀 NUKE READY!                                 source=console
INFO[0003] 💥 FAYYYAAAAH! 🇯🇵                              source=console
INFO[0003] Adding all pregenerated merchants... 😰        source=console
INFO[0010] All pregenerated merchants added! 🥳           source=console
INFO[0060] Test ended, I recomend to remove all of your merchants before re-run the test to avoid miss estimation on nearest merchant location.  source=console

     ✓ Admin Register | valid payload | should return 201
     ✓ Admin Register | register twice | should return 409
     ✓ Admin Login | valid payload | should return 200
     ✓ Merchant Get | no param | should return 200
     ✓ Merchant Get | no param | should have the correct total data based on pagination
     ✓ Merchant Get | no param | should have merchantId
     ✓ Merchant Get | no param | should have name
     ✓ Merchant Get | no param | should have imageUrl
     ✓ Merchant Get | no param | should have merchantCategory
     ✓ Merchant Get | no param | should have createdAt with correct format
     ✓ Merchant Get | no param | should have return ordered correctly
     ✓ Merchant Get | no param | should have location.lat
     ✓ Merchant Get | no param | should have location.long
     ✓ Merchant Get | no param | should have meta.limit
     ✓ Merchant Get | no param | should have meta.offset
     ✓ Merchant Get | no param | should have meta.total
     ✓ Merchant Get | with name=a param | should have name with "a" in it
     ✓ Merchant Get | with merchantCategory=BoothKiosk param | should have "BoothKiosk" category in it
     ✓ Merchant Get | with createdAt=asc param | should have return ordered correctly
     ✓ Merchant Get | pagination | should have the correct total data based on pagination
     ✓ User Register | valid payload | should return 201
     ✓ User Register | register twice | should return 409
     ✓ User Login | valid payload | should return 200
     ✓ User Get Nearby Merchant | no param | should have the correct nearest merchant
     ✓ User Get Nearby Merchant | with name=a param | should have name with "a" in it
     ✓ User Get Nearby Merchant | with merchantCategory=BoothKiosk param | should have "BoothKiosk" category in it
     ✓ User Estimate Order Test | get merchant items | should return 200
     ✓ User Estimate Order Test | get merchant items | should have itemId
     ✓ User Estimate Order Test | add merchant items if not exists | should return 201
     ✓ User Estimate Order Test | add merchant items if not exists | should have itemId
     ✓ User Estimate Order Test | valid payload | should return 200
     ✓ User Estimate Order Test | valid payload | should have totalPrice and equal to calculated total
     ✓ User Estimate Order Test | valid payload | should have calculatedEstimateId
     ✓ User Estimate Order Test | valid payload | should have estimatedDeliveryTimeInMinutes and not far from precalculated resul
     ✓ User Order Test | valid payload | should return 201
     ✓ User Order Test | valid payload | should have orderId
     ✓ User Get Order Test | no param | should return 200
     ✓ User Get Order Test | no param | should have the correct total data based on pagination
     ✓ User Get Order Test | no param | should have merchant.merchantId
     ✓ User Get Order Test | no param | should have merchant.name
     ✓ User Get Order Test | no param | should have merchant.imageUrl
     ✓ User Get Order Test | no param | should have merchant.merchantCategory
     ✓ User Get Order Test | no param | should have merchant.createdAt
     ✓ User Get Order Test | no param | should have merchant.location.lat
     ✓ User Get Order Test | no param | should have merchant.location.long
     ✓ User Get Order Test | no param | should have items.itemId
     ✓ User Get Order Test | no param | should have items.name
     ✓ User Get Order Test | no param | should have items.imageUrl
     ✓ User Get Order Test | no param | should have items.productCategory
     ✓ User Get Order Test | no param | should have items.createdAt
     ✓ User Get Order Test | with name=a param | should have name with "a" in it
     ✗ User Get Order Test | with merchantCategory=BoothKiosk param | should have "BoothKiosk" category in it
      ↳  73% — ✓ 1136 / ✗ 417
     ✓ User Get Order Test | pagination | should have the correct total data based on pagination

     █ setup

       ✓ Admin Register | valid payload | should return 201
       ✓ Admin Register | register twice | should return 409
       ✓ Admin Login | valid payload | should return 200
       ✓ Merchant Post | valid payload | should return 201
       ✓ Merchant Post | valid payload | should have merchantId

     █ teardown

     checks.........................: 99.70% ✓ 141389     ✗ 417
     data_received..................: 838 MB 15 MB/s
     data_sent......................: 27 MB  462 kB/s
     grpc_req_duration..............: avg=129.59ms min=89.09µs  med=1.89ms  max=5.02s    p(90)=165.08ms p(95)=733.51ms
     http_req_blocked...............: avg=84.21µs  min=527ns    med=2.69µs  max=334.58ms p(90)=5.89µs   p(95)=8.01µs
     http_req_connecting............: avg=58.71µs  min=0s       med=0s      max=237.71ms p(90)=0s       p(95)=0s
     http_req_duration..............: avg=36.71ms  min=299.4µs  med=4.43ms  max=2.24s    p(90)=98.33ms  p(95)=153.12ms
       { expected_response:true }...: avg=37.39ms  min=305.91µs med=4.64ms  max=2.22s    p(90)=99.76ms  p(95)=155.44ms
     http_req_failed................: 4.86%  ✓ 3107       ✗ 60809
     http_req_receiving.............: avg=1.08ms   min=8.47µs   med=44.76µs max=2.18s    p(90)=97.93µs  p(95)=137.54µs
     http_req_sending...............: avg=163.92µs min=3.34µs   med=15.32µs max=764.63ms p(90)=40.68µs  p(95)=51µs
     http_req_tls_handshaking.......: avg=0s       min=0s       med=0s      max=0s       p(90)=0s       p(95)=0s
     http_req_waiting...............: avg=35.46ms  min=230.76µs med=4.3ms   max=2.15s    p(90)=97.13ms  p(95)=150.52ms
     http_reqs......................: 63916  1109.59904/s
     iteration_duration.............: avg=3.82s    min=4.33ms   med=1.63s   max=15.16s   p(90)=11.46s   p(95)=12.19s
     iterations.....................: 1553   26.9605/s
     vus............................: 43     min=0        max=300
     vus_max........................: 300    min=300      max=300
